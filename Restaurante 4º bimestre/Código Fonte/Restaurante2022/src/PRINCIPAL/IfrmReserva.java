package PRINCIPAL;

import CODIGOINTERNO.CIFuncionario;
import CODIGOINTERNO.CIRegistro;
import CODIGOINTERNO.CIReserva;
import VARIAVEIS.Cliente;
import VARIAVEIS.DataHora;
import VARIAVEIS.Funcionario;
import VARIAVEIS.Registro;
import VARIAVEIS.Reserva;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class IfrmReserva extends javax.swing.JInternalFrame {

    private static IfrmReserva ifrmReserva;
    Reserva r1 = new Reserva();
    CIReserva cir1 = new CIReserva();
    Registro r = new Registro();
    CIRegistro reg = new CIRegistro();
    DataHora dh = new DataHora();
    CIFuncionario cif = new CIFuncionario();
    Funcionario f = new Funcionario();

    public static IfrmReserva getInstancia() {
        if (ifrmReserva == null) {
            ifrmReserva = new IfrmReserva();
        }
        return ifrmReserva;
    }

    public IfrmReserva() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlCadastroReserva = new javax.swing.JPanel();
        lblCpfCliente = new javax.swing.JLabel();
        lblCpfFuncionario = new javax.swing.JLabel();
        lblData = new javax.swing.JLabel();
        lblSaida = new javax.swing.JLabel();
        lblMesa = new javax.swing.JLabel();
        cbxCpfCliente = new javax.swing.JComboBox();
        cbxCpfFuncionario = new javax.swing.JComboBox();
        txtSaida = new javax.swing.JFormattedTextField();
        txtMesa = new javax.swing.JTextField();
        btnInserir = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        btnPesquisar = new javax.swing.JToggleButton();
        lblIDReserva = new javax.swing.JLabel();
        txtIDReserva = new javax.swing.JTextField();
        lblEntrada = new javax.swing.JLabel();
        txtEntrada = new javax.swing.JFormattedTextField();
        txtData = new javax.swing.JFormattedTextField();
        pnlTabelaReserva = new javax.swing.JScrollPane();
        tblReservas = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        pnlCadastroReserva.setBackground(new java.awt.Color(0, 204, 102));
        pnlCadastroReserva.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Novas reservas:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12), new java.awt.Color(102, 102, 255))); // NOI18N

        lblCpfCliente.setText("Cpf do cliente:");

        lblCpfFuncionario.setText("Cpf do funcionário:");

        lblData.setText("Data da reserva(AA/mm/dd):");

        lblSaida.setText("Horário da saída:");

        lblMesa.setText("Mesa reservada:");

        cbxCpfCliente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SELECIONE:" }));
        cbxCpfCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxCpfClienteActionPerformed(evt);
            }
        });

        cbxCpfFuncionario.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SELECIONE:" }));
        cbxCpfFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxCpfFuncionarioActionPerformed(evt);
            }
        });

        try {
            txtSaida.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        btnInserir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICONES/Confirmar.png"))); // NOI18N
        btnInserir.setText("Inserir");
        btnInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInserirActionPerformed(evt);
            }
        });

        btnAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICONES/Alterar.png"))); // NOI18N
        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnRemover.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICONES/Apagar.png"))); // NOI18N
        btnRemover.setText("Remover");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        btnLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICONES/Limpar.png"))); // NOI18N
        btnLimpar.setText("Limpar dados");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        btnPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICONES/Pesquisar.png"))); // NOI18N
        btnPesquisar.setText("Pesquisar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        lblIDReserva.setText("ID:");

        lblEntrada.setText("Horário da entrada:");

        try {
            txtEntrada.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            txtData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-##-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout pnlCadastroReservaLayout = new javax.swing.GroupLayout(pnlCadastroReserva);
        pnlCadastroReserva.setLayout(pnlCadastroReservaLayout);
        pnlCadastroReservaLayout.setHorizontalGroup(
            pnlCadastroReservaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCadastroReservaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLimpar)
                .addGap(18, 18, 18)
                .addComponent(btnPesquisar)
                .addGap(93, 93, 93))
            .addGroup(pnlCadastroReservaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCadastroReservaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCadastroReservaLayout.createSequentialGroup()
                        .addComponent(lblCpfCliente)
                        .addGap(18, 18, 18)
                        .addComponent(cbxCpfCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlCadastroReservaLayout.createSequentialGroup()
                        .addComponent(lblCpfFuncionario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxCpfFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlCadastroReservaLayout.createSequentialGroup()
                        .addComponent(lblData)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlCadastroReservaLayout.createSequentialGroup()
                        .addComponent(btnInserir)
                        .addGap(18, 18, 18)
                        .addComponent(btnAlterar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRemover))
                    .addGroup(pnlCadastroReservaLayout.createSequentialGroup()
                        .addComponent(lblMesa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlCadastroReservaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlCadastroReservaLayout.createSequentialGroup()
                            .addComponent(lblSaida)
                            .addGap(18, 18, 18)
                            .addComponent(txtSaida))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlCadastroReservaLayout.createSequentialGroup()
                            .addComponent(lblEntrada)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlCadastroReservaLayout.createSequentialGroup()
                        .addComponent(lblIDReserva)
                        .addGap(18, 18, 18)
                        .addComponent(txtIDReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        pnlCadastroReservaLayout.setVerticalGroup(
            pnlCadastroReservaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCadastroReservaLayout.createSequentialGroup()
                .addGroup(pnlCadastroReservaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIDReserva)
                    .addComponent(txtIDReserva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCadastroReservaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCpfCliente)
                    .addComponent(cbxCpfCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCadastroReservaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCpfFuncionario)
                    .addComponent(cbxCpfFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(pnlCadastroReservaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblData)
                    .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCadastroReservaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEntrada)
                    .addComponent(txtEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlCadastroReservaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSaida)
                    .addComponent(txtSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlCadastroReservaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMesa)
                    .addComponent(txtMesa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlCadastroReservaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInserir)
                    .addComponent(btnAlterar)
                    .addComponent(btnRemover))
                .addGap(18, 18, 18)
                .addGroup(pnlCadastroReservaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPesquisar)
                    .addComponent(btnLimpar))
                .addContainerGap())
        );

        tblReservas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id reserva:", "Cpf do cliente:", "Cpf do funcionário:", "Data:", "Entrada:", "Saída:", "Mesa:"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblReservas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblReservasMouseClicked(evt);
            }
        });
        pnlTabelaReserva.setViewportView(tblReservas);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlCadastroReserva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlTabelaReserva, javax.swing.GroupLayout.DEFAULT_SIZE, 487, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlCadastroReserva, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlTabelaReserva, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        preencherReservas();
        if (campoVazio() == false) {
            int confirma = JOptionPane.showConfirmDialog(null, "Tem certeza que irá alterar?", "Confirmação", JOptionPane.YES_NO_OPTION);
            if (confirma == 0) {
                String idReserva;
                idReserva = txtIDReserva.getText();
                r1.reservaId(idReserva);
                cir1.alterar(r1, idReserva);
                JOptionPane.showMessageDialog(null, "A alteração foi realizada com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                preencherTabela(null);
                limpar();
                registrarAlteracao();
            } else {
                preencherTabela(null);
                limpar();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Há campos vazios", "Erro!", JOptionPane.ERROR_MESSAGE);
            registrarTAlteracao();
        }
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInserirActionPerformed
        if (campoVazio() == false) {
            r1.setCpfCliente(cbxCpfCliente.getSelectedItem().toString());
            r1.setCpfFuncionario(cbxCpfFuncionario.getSelectedItem().toString());
            r1.setDataReserva(txtData.getText());
            r1.setEntradaReserva(txtEntrada.getText());
            r1.setSaidaReserva(txtSaida.getText());
            r1.setMesaReserva(txtMesa.getText());
            preencherReservas();
            cir1.inserir(r1);
            JOptionPane.showMessageDialog(null, "Inserção feita com sucesso !", " ", JOptionPane.INFORMATION_MESSAGE);
            preencherTabela(null);
            limpar();
            registrarInsercao();
        } else {
            JOptionPane.showMessageDialog(null, "Há campos vazios que devem ser preenchidos", "Há campos vazios", JOptionPane.WARNING_MESSAGE);
            registrarTInsercao();
        }
    }//GEN-LAST:event_btnInserirActionPerformed

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        limpar();
        preencherTabela(null);
        cbxCpfCliente.removeAllItems();
        cbxCpfCliente.addItem("SELECIONE:");
        cbxCpfFuncionario.removeAllItems();
        cbxCpfFuncionario.addItem("SELECIONE:");
        ArrayList cpfClienteTabe = cir1.pesquisarCpfCliente();
        for (Object clientes : cpfClienteTabe) {
            cbxCpfCliente.addItem(clientes);
        }
        ArrayList cpfFuncionario = cir1.pesquisarCpfFuncionario();
        for (Object funcionarios : cpfFuncionario) {
            cbxCpfFuncionario.addItem(funcionarios);
        }
    }//GEN-LAST:event_formInternalFrameActivated

    private void cbxCpfClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxCpfClienteActionPerformed
        if (cbxCpfCliente.getSelectedIndex() > 0) {
            Cliente c1 = (Cliente) cbxCpfCliente.getSelectedItem();
        }
    }//GEN-LAST:event_cbxCpfClienteActionPerformed

    private void cbxCpfFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxCpfFuncionarioActionPerformed
        if (cbxCpfFuncionario.getSelectedIndex() > 0) {
            Funcionario f1 = (Funcionario) cbxCpfFuncionario.getSelectedItem();
        }
    }//GEN-LAST:event_cbxCpfFuncionarioActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        if (txtIDReserva.getText().equals(null)) {
            JOptionPane.showMessageDialog(null, "Você não adicionou nenhum id para remover", "Sem dados!", JOptionPane.ERROR_MESSAGE);
            registrarTRemocao();
        } else {
            int confirma;
            confirma = JOptionPane.showConfirmDialog(null, "Você tem certeza que deseja remover?\n Será permanente", "Confirmação:", JOptionPane.YES_NO_OPTION);
            if (confirma == 0) {
                cir1.remover(txtIDReserva.getText());
                preencherTabela(null);
                limpar();
                registrarRemocao();
            } else {
                preencherTabela(null);
                limpar();
            }
        }
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        limpar();
    }//GEN-LAST:event_btnLimparActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        if (btnPesquisar.isSelected()) {
            preencherTabela(txtIDReserva.getText());
            btnPesquisar.setText("Cancelar");
        } else {
            btnPesquisar.setText("Pesquisar");
            preencherTabela(null);
            limpar();
        }
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void tblReservasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblReservasMouseClicked
        if (tblReservas.getSelectedRow() > -1) {
            txtIDReserva.setText(tblReservas.getValueAt(tblReservas.getSelectedRow(), 0).toString());
            cbxCpfCliente.setSelectedItem(tblReservas.getValueAt(tblReservas.getSelectedRow(), 1).toString());
            cbxCpfFuncionario.setSelectedItem(tblReservas.getValueAt(tblReservas.getSelectedRow(), 2).toString());
            txtData.setText(tblReservas.getValueAt(tblReservas.getSelectedRow(), 3).toString());
            txtEntrada.setText(tblReservas.getValueAt(tblReservas.getSelectedRow(), 4).toString());
            txtSaida.setText(tblReservas.getValueAt(tblReservas.getSelectedRow(), 5).toString());
            txtMesa.setText(tblReservas.getValueAt(tblReservas.getSelectedRow(), 6).toString());
            ArrayList<Cliente> clientes = cir1.pesquisarCpfCliente();
            for (Cliente c : clientes) {
                if (c.getCpfCliente().equals(tblReservas.getValueAt(tblReservas.getSelectedRow(), 1))) {
                    cbxCpfCliente.setSelectedIndex(clientes.indexOf(c) + 1);
                    habilitarBotoes(true);
                }
            }
            ArrayList<Funcionario> funcionarios = cir1.pesquisarCpfFuncionario();
            for (Funcionario f : funcionarios) {
                if (f.getCpfFuncionario().equals(tblReservas.getValueAt(tblReservas.getSelectedRow(), 2))) {
                    cbxCpfFuncionario.setSelectedIndex(funcionarios.indexOf(f) + 1);
                    habilitarBotoes(true);
                }
            }
        }
    }//GEN-LAST:event_tblReservasMouseClicked

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        
    }//GEN-LAST:event_formInternalFrameOpened

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        limpar();
    }//GEN-LAST:event_formInternalFrameClosed
    private void limpar() {
        txtIDReserva.setText("");
        cbxCpfCliente.setSelectedItem("SELECIONE:");
        cbxCpfFuncionario.setSelectedItem("SELECIONE:");
        txtData.setText(null);
        txtEntrada.setText(null);
        txtSaida.setText(null);
        txtMesa.setText(null);
        habilitarBotoes(false);
    }

    private boolean campoVazio() {
        boolean vazio = false;
        if (cbxCpfCliente.getSelectedItem().equals("SELECIONE:")
                || cbxCpfFuncionario.getSelectedItem().equals("SELECIONE:")
                || txtData.getText().equals("    -  -  ")
                || txtEntrada.getText().equals("  :  ")
                || txtSaida.getText().equals("  :  ")
                || txtMesa.getText() == null) {
            vazio = true;
        }
        return vazio;
    }

    private void preencherTabela(String nomeCliente) {
        ArrayList<Reserva> reservasTabe = cir1.pesquisar(nomeCliente);
        DefaultTableModel modelo = (DefaultTableModel) tblReservas.getModel();
        modelo.setNumRows(0);
        for (Reserva c : reservasTabe) {
            modelo.addRow(new String[]{c.getIdReserva(), c.getCpfCliente(), c.getCpfFuncionario(), c.getDataReserva(), c.getEntradaReserva(), c.getSaidaReserva(), c.getMesaReserva()});
        }
        tblReservas.setModel(modelo);

    }

    private void preencherReservas() {
        r1.setCpfCliente(cbxCpfCliente.getSelectedItem().toString());
        r1.setCpfFuncionario(cbxCpfFuncionario.getSelectedItem().toString());
        r1.setDataReserva(txtData.getText());
        r1.setEntradaReserva(txtEntrada.getText());
        r1.setSaidaReserva(txtSaida.getText());
        r1.setMesaReserva(txtMesa.getText());
    }

    private void habilitarBotoes(boolean habilitar) {
        if (habilitar) {
            btnRemover.setEnabled(true);
            btnAlterar.setEnabled(true);
        } else {
            btnRemover.setEnabled(false);
            btnAlterar.setEnabled(false);
        }
    }
    
    private void preencherRegistro() {
        r.setCpfCliente(r1.getCpfCliente());
        r.setCpfAutor(FrmPrincipal.cpfAutor);
        r.setIdReserva(r1.getIdReserva());
        r.setData(dh.getData());
        r.setHora(dh.getHora());
        
    }
    
    private void registrarAlteracao() {
        r.setAcaoRegistro("Tentativa de alteração bem-sucedida (Reserva).");
        preencherRegistro();
        reg.registrar(r, dh);
    }
    
    private void registrarTAlteracao() {
        r.setAcaoRegistro("Tentativa de alteração fracassada (Reserva).");
        preencherRegistro();
        reg.registrar(r, dh);
    }
    
    private void registrarRemocao() {
        r.setAcaoRegistro("Tentativa de remoção bem-sucedida (Reserva).");
        preencherRegistro();
        reg.registrar(r, dh);
    }
    private void registrarTRemocao() {
        r.setAcaoRegistro("Tentativa de remoção fracassada (Reserva).");
        preencherRegistro();
        reg.registrar(r, dh);
    }
    private void registrarInsercao() {
        r.setAcaoRegistro("Tentativa de inserção bem-sucedida (Reserva).");
        preencherRegistro();
        reg.registrar(r, dh);
    }
    private void registrarTInsercao() {
        r.setAcaoRegistro("Tentativa de inserção fracassada (Reserva).");
        preencherRegistro();
        reg.registrar(r, dh);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnInserir;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JToggleButton btnPesquisar;
    private javax.swing.JButton btnRemover;
    private javax.swing.JComboBox cbxCpfCliente;
    private javax.swing.JComboBox cbxCpfFuncionario;
    private javax.swing.JLabel lblCpfCliente;
    private javax.swing.JLabel lblCpfFuncionario;
    private javax.swing.JLabel lblData;
    private javax.swing.JLabel lblEntrada;
    private javax.swing.JLabel lblIDReserva;
    private javax.swing.JLabel lblMesa;
    private javax.swing.JLabel lblSaida;
    private javax.swing.JPanel pnlCadastroReserva;
    private javax.swing.JScrollPane pnlTabelaReserva;
    private javax.swing.JTable tblReservas;
    private javax.swing.JFormattedTextField txtData;
    private javax.swing.JFormattedTextField txtEntrada;
    private javax.swing.JTextField txtIDReserva;
    private javax.swing.JTextField txtMesa;
    private javax.swing.JFormattedTextField txtSaida;
    // End of variables declaration//GEN-END:variables
}
